import numpy as np
from dtw import dtw
import matplotlib.pyplot as plt
from scipy.misc import electrocardiogram
from scipy.signal import find_peaks

x =[ 2.275090217590332,
2.38462495803833,
2.449866771697998,
2.4372973442077637,
1.8381483554840088,
1.1402385234832764,
1.7818846702575684,
2.076371431350708,
2.3720552921295166,
2.275090217590332,
2.38462495803833,
2.449866771697998,
2.4372973442077637,
1.8381483554840088,
1.1402385234832764,
1.7818846702575684,
2.076371431350708,
2.3720552921295166]

y =[ 2.275090217590332,
2.38462495803833,
2.449866771697998,
2.4372973442077637,
1.8381483554840088,
1.1402385234832764,
1.7818846702575684,
2.076371431350708,
2.3720552921295166,
2.275090217590332,
2.38462495803833,
2.449866771697998,
2.4372973442077637,
1.8381483554840088,
1.1402385234832764,
1.7818846702575684,
2.076371431350708,
2.3720552921295166]


def draw_peaks(x):
	x = np.array(x)
	peaks, _ = find_peaks(x, height=0)
	plt.plot(x)
	plt.plot(peaks, x[peaks], "x")
	plt.plot(np.zeros_like(x), "--", color="gray")
	plt.show()	

def calculate_dtw(x, y):
	x = np.array(x)
	y = np.array(y)
	euclidean_norm = lambda x, y: np.abs(x - y)
	d, cost_matrix, acc_cost_matrix, path = dtw(x, y, dist=euclidean_norm)
	print(d)

draw_peaks(x)
calculate_dtw(x, y)
